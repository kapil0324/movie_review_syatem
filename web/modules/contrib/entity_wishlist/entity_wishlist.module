<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\user\Entity\User;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function entity_wishlist_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.entity_wishlist':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Entity Wishlist module is very useful for the site with large content. This module allow site visitors to add any node into there wishlist and then they can read later.') . '</p>';
      $output .= '<h3>' . t('Configuration') . '</h3>';
      $output .= '<p>' . t('This module will create an admin configuration page: admin/structure/entity-whishlist.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_preprocess_node().
 */
function entity_wishlist_preprocess_node(&$variables) {
  $node = $variables['elements']['#node'];
  $nid = $node->id();
  $config = \Drupal::config('entitywishlist.settings');
  if (isset($config->get('entitywishlist_content_type')[$node->getType()]) && $config->get('entitywishlist_content_type')[$node->getType()]) {
    $user = User::load(\Drupal::currentUser()->id());
    $uid = $user->get('uid')->value;
    $request = \Drupal::destination();
    $path = '/node/' . $nid . '/add-to-entity-wishlist';
    $url = Url::fromUri('internal:' . $path, [
      'query' => ['destination' => $request->get()],
      'absolute' => TRUE,
    ]
    );
    $db = \Drupal::database();
    $query = $db->select('entity_wishlist', 'ew');
    $query->fields('ew', ["wid"]);
    $query->condition('entity_id', $nid, "=");
    $query->condition('uid', $uid, "=");
    $check_entry = $query->execute()->FetchField();
    if ($check_entry) {
      $link = Link::fromTextAndUrl(t("Remove from my content wishlist"), $url);
    }
    else {
      $link = Link::fromTextAndUrl(t("Read Later"), $url);
    }
    if (!$uid) {
      $path = "/user/login";
      $url = Url::fromUri('internal:' . $path, [
        'query' => ['destination' => $request->get()],
        'absolute' => TRUE,
      ]
      );
      $link = Link::fromTextAndUrl(t("Read Later"), $url, [
        'query' => ['destination' => $request],
        'absolute' => TRUE,
      ]);
    }
    $variables['content']['entity_wishlist_link'] = [
      '#markup' => $link->toString(),
      '#weight' => 3,
    ];
  }
}
